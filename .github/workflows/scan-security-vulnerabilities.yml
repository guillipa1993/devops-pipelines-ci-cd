name: "Scan Security Vulnerabilities"

on:
  workflow_call:
    inputs:
      language:
        description: 'The programming language for vulnerability scanning'
        required: true
        type: string
      dotnet-version:
        description: 'La versión de .NET para usar en este pipeline'
        required: false
        type: string
      go-version:
        description: 'La versión de Go para usar en este pipeline'
        required: false
        type: string
      python-version:
        description: 'La versión de Python para usar en este pipeline'
        required: false
        type: string

jobs:
  scan-security-vulnerabilities:
    runs-on: ubuntu-latest
    steps:
      # Realizar el checkout del código
      - name: Checkout code
        uses: actions/checkout@v2

      # Instalar .NET si el lenguaje es 'dotnet' y hay una versión especificada
      - name: Set up .NET Core
        if: ${{ inputs.language == 'dotnet' && inputs.dotnet-version }}
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: "${{ inputs.dotnet-version }}"

      # Instalar Go si el lenguaje es 'go' y hay una versión especificada
      - name: Install Nancy
        if: ${{ inputs.language == 'go' }}
        run: |
          NANCY_VERSION=$(curl --silent "https://api.github.com/repos/sonatype-nexus-community/nancy/releases/latest" | grep '"tag_name"' | sed -E 's/.*"([^"]+)".*/\1/')
          echo "Installing Nancy version $NANCY_VERSION"
          curl -Lo nancy https://github.com/sonatype-nexus-community/nancy/releases/download/$NANCY_VERSION/nancy-$NANCY_VERSION-linux-amd64
          file nancy  # Verifica que sea un binario ejecutable
          chmod +x nancy
          sudo mv nancy /usr/local/bin/nancy
          echo "Nancy installed successfully"
        
      - name: Check Nancy installation
        if: ${{ inputs.language == 'go' }}
        run: nancy --version

      # Instalar Python si el lenguaje es 'python' y hay una versión especificada
      - name: Set up Python
        if: ${{ inputs.language == 'python' && inputs.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: "${{ inputs.python-version }}"
      
      - name: Install Python Security Tool
        if: ${{ inputs.language == 'python' && inputs.python-version }}
        run: |
          pip install safety

      # Escanear vulnerabilidades basado en el lenguaje
      - name: Scan for Vulnerabilities
        run: |
          if [ "${{ inputs.language }}" == "go" ]; then
            echo "Scanning Go modules for vulnerabilities"
            go list -m all | nancy sleuth
          elif [ "${{ inputs.language }}" == "node" ]; then
            echo "Running npm audit for Node.js"
            npm audit --production
          elif [ "${{ inputs.language }}" == "python" ]; then
            echo "Running safety check for Python"
            safety check
          elif [ "${{ inputs.language }}" == "java" ]; then
            echo "Running OWASP Dependency Check for Java"
            ./mvnw org.owasp:dependency-check-maven:check
          elif [ "${{ inputs.language }}" == "dotnet" ]; then
            version=$(echo "${{ inputs.dotnet-version }}" | cut -d'.' -f1)
            if [ "$version" -lt 5 ]; then
              echo "Using 'dotnet list package --outdated' since '--vulnerable' is not available in versions less than .NET 5"
              dotnet list package --outdated
            else
              echo "Scanning .NET packages for vulnerabilities"
              dotnet list package --vulnerable
            fi
          fi
