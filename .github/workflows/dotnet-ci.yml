name: "ASP.NET Core CI/CD Pipeline"

on:
  workflow_call:
    inputs:
      dotnet-version:
        description: 'La versión de .NET para usar en este pipeline'
        required: true
        type: string
      language:
        description: 'El lenguaje de programación para usar en este pipeline'
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download .NET SDK
        run: |
          mkdir -p $HOME/dotnet
          wget https://dotnet.microsoft.com/download/dotnet/scripts/v1/dotnet-install.sh -O dotnet-install.sh
          chmod +x dotnet-install.sh
          set +e
          ./dotnet-install.sh --version ${{ inputs.dotnet-version }} --install-dir $HOME/dotnet || ./dotnet-install.sh --channel 9.0 --install-dir $HOME/dotnet
          set -e
          
      - name: Set up .NET
        run: |
          echo "DOTNET_ROOT=$HOME/dotnet" >> $GITHUB_ENV
          echo "$HOME/dotnet" >> $GITHUB_PATH
      
      - name: Set up .NET Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ inputs.dotnet-version }}

      - name: Install System Dependencies
        run: sudo apt-get update && sudo apt-get install -y build-essential libssl-dev

      - name: Install dependencies
        run: |
          find . -name "*.csproj" | xargs -I {} dotnet restore {} --ignore-failed-sources || true
        
      - name: Build
        run: |
          find . -name "*.csproj" | xargs -I {} dotnet build {} --configuration Release --no-restore --ignore-failed-sources || true

      - name: Run Tests
        run: |
          find . -name "*.csproj" | xargs -I {} dotnet test {} --no-restore --verbosity normal --ignore-failed-sources || true

  check-code-format:
    needs: build
    uses: ./.github/workflows/check-code-format.yml
    with:
      dotnet-version: ${{ inputs.dotnet-version }}
      language: ${{ inputs.language }}

  scan-security-vulnerabilities:
    needs: check-code-format
    uses: ./.github/workflows/scan-security-vulnerabilities.yml
    with:
      language: ${{ inputs.language }}

  build-artifact:
    needs: scan-security-vulnerabilities
    uses: ./.github/workflows/build-artifact.yml
    with:
      language: ${{ inputs.language }}

  generate-coverage:
    needs: build-artifact
    uses: ./.github/workflows/generate-coverage.yml
    with:
      language: ${{ inputs.language }}

  upload-coverage-report:
    needs: generate-coverage
    uses: ./.github/workflows/upload-coverage-report.yml
    with:
      language: ${{ inputs.language }}

  clean-up:
    needs: upload-coverage-report
    uses: ./.github/workflows/clean-up.yml
    with:
      language: ${{ inputs.language }}
