name: "ASP.NET Core CI/CD Pipeline"

on:
  workflow_call:
    inputs:
      dotnet-version:
        description: 'La versión de .NET para usar en este pipeline'
        required: true
        type: string
      language:
        description: 'El lenguaje de programación para usar en este pipeline'
        required: true
        type: string
      project-path:
        description: 'La ruta del proyecto donde se encuentran los archivos .csproj'
        required: true
        type: string
      build-configuration:
        description: 'La configuración de build (Debug o Release)'
        required: true
        type: string
      additional-install-commands:
        description: 'Comandos adicionales para instalar dependencias antes de construir'
        required: false
        type: string
      run-tests:
        description: 'Ejecutar las pruebas del proyecto'
        required: true
        type: boolean
      run-check-code-format:
        description: 'Ejecutar la verificación del formato del código'
        required: true
        type: boolean
      run-code-analysis:
        description: 'Ejecutar el análisis de código'
        required: true
        type: boolean
      run-build-artifact:
        description: 'Generar el artefacto de build'
        required: true
        type: boolean
      run-upload-coverage:
        description: 'Subir el reporte de cobertura'
        required: true
        type: boolean
      run-yaml-lint:
        description: 'Ejecutar YAML Lint'
        required: true
        type: boolean
      run-clean-up:
        description: 'Ejecutar limpieza después de la ejecución'
        required: true
        type: boolean
      environment-variables:
        description: 'Variables de entorno para configurar en el pipeline (formato: "VAR1=value1, VAR2=value2")'
        required: false
        type: string

jobs:
  ci_pipeline:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ inputs.dotnet-version }}

      - name: Cache .NET packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-dotnet-${{ inputs.dotnet-version }}-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-dotnet-${{ inputs.dotnet-version }}-

      - name: Install additional dependencies
        if: ${{ inputs.additional-install-commands }}
        run: ${{ inputs.additional-install-commands }}

      - name: Install dependencies
        run: dotnet restore ${{ inputs.project-path }}

      - name: Set Environment Variables
        if: ${{ inputs.environment-variables }}
        run: |
          IFS=',' read -ra VARS <<< "${{ inputs.environment-variables }}"
          for VAR in "${VARS[@]}"; do
            echo "Setting $VAR"
            echo "$VAR" >> $GITHUB_ENV
          done

      - name: Build
        run: |
          if [ "${{ inputs.build-configuration }}" != "" ]; then
            dotnet build ${{ inputs.project-path }} --configuration ${{ inputs.build-configuration }}
          else
            dotnet build ${{ inputs.project-path }}
          fi

      - name: Run Code Format Check
        if: ${{ inputs.run-check-code-format }}
        run: |
          echo "Checking code format"
          dotnet format ${{ inputs.project-path }}

      - name: Run Code Analysis
        if: ${{ inputs.run-code-analysis }}
        uses: ./.github/workflows/scan-security-vulnerabilities.yml
        with:
          language: ${{ inputs.language }}

      - name: Run Build Artifact
        if: ${{ inputs.run-build-artifact }}
        uses: ./.github/workflows/build-artifact.yml
        with:
          language: ${{ inputs.language }}

      - name: Install yamllint
        if: ${{ inputs.run-yaml-lint }}
        run: sudo apt-get install -y yamllint

      - name: Run YAML Lint
        if: ${{ inputs.run-yaml-lint }}
        run: yamllint .

      - name: Clean up
        if: ${{ inputs.run-clean-up }}
        uses: ./.github/workflows/clean-up.yml
        with:
          language: ${{ inputs.language }}
