name: Create JIRA Ticket from GitHub Actions

on:
  workflow_call:
    secrets:
      AZURE_STORAGE_ACCOUNT_NAME:
        description: "Azure Storage Account Name"
        required: true
      AZURE_STORAGE_ACCOUNT_KEY:
        description: "Azure Storage Account Key"
        required: true
      OPENAI_API_KEY:
        description: "OpenAI API Key"
        required: true
      JIRA_CLOUD_API_TOKEN:
        description: "Jira Cloud API Key"
        required: true
      JIRA_CLOUD_USERNAME: 
        description: "Jira Cloud Username"
        required: true
    inputs:
      project-name:
        description: "The name of the GitHub repository"
        required: true
        type: string
      run-id:
        description: "The ID of the current GitHub run"
        required: true
        type: string
      report-language:
        description: "Language for the summary report (e.g., English, Spanish)"
        required: false
        type: string
      log-type:
        description: "Type of logs to analyze (e.g., failure, success)"
        required: true
        type: string
      repo:
        description: "The name of the GitHub repository and owner"
        required: true
        type: string
      jira-project-key: 
        description: 'Reference to the Jira Project'
        required: true
        type: string
      jira-url: 
        description: 'URL from Jira Cloud instance'
        required: true
        type: string

jobs:
  create-jira-ticket:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install jira requests
          pip install openai
          pip install --upgrade openai
          python -c "import openai; print('OpenAI library installed successfully')"
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      - name: Download scripts from library repo
        run: |
          echo "Cloning the devops-pipelines-ci-cd repository to obtain scripts..."
          # OJO: ajusta la rama/URL segÃºn tu repositorio final
          git clone --branch Add-copilot-and-jira https://github.com/guillipa1993/devops-pipelines-ci-cd.git
          mkdir -p scripts
          cp devops-pipelines-ci-cd/scripts/unified_analyze_and_create.py scripts/  # Nombre ficticio
          if [ -f "scripts/unified_analyze_and_create.py" ]; then
            echo "SUCCESS: unified_analyze_and_create.py copied to scripts directory."
          else
            echo "ERROR: Failed to copy unified_analyze_and_create.py to scripts directory." >&2
            exit 1
          fi

      - name: Download Matching Logs from Azure Storage
        run: |
          mkdir -p $GITHUB_WORKSPACE/logs
          REPO_NAME="${{ inputs.project-name }}"
          RUN_ID="${{ inputs.run-id }}"
          LOG_NAME_PREFIX="${REPO_NAME}-${RUN_ID}-"

          echo "Listing matching blobs for pattern: ${LOG_NAME_PREFIX}*.log"
          az storage blob list \
            --account-name "${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }}" \
            --account-key "${{ secrets.AZURE_STORAGE_ACCOUNT_KEY }}" \
            --container-name logs \
            --query "[].{name:name}" -o tsv | grep "^${LOG_NAME_PREFIX}" > blob_list.txt

          if [ ! -s blob_list.txt ]; then
            echo "No logs found matching pattern: ${LOG_NAME_PREFIX}*.log"
            exit 1
          fi

          cat blob_list.txt

          while IFS= read -r blob_name; do
            echo "Downloading $blob_name ..."
            az storage blob download \
              --account-name "${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }}" \
              --account-key "${{ secrets.AZURE_STORAGE_ACCOUNT_KEY }}" \
              --container-name logs \
              --name "$blob_name" \
              --file "$GITHUB_WORKSPACE/logs/$(basename $blob_name)"
          done < blob_list.txt

          echo "Downloaded logs:"
          ls -la $GITHUB_WORKSPACE/logs

      - name: Create JIRA Ticket (Analyze + Create)
        run: |
          python scripts/unified_analyze_and_create.py \
            --jira-url "${{ inputs.jira-url }}" \
            --jira-project-key "${{ inputs.jira-project-key }}" \
            --log-dir "$GITHUB_WORKSPACE/logs" \
            --log-type "${{ inputs.log-type }}" \
            --report-language "${{ inputs.report-language }}" \
            --project-name "${{ inputs.project-name }}" \
            --run-id "${{ inputs.run-id }}" \
            --repo "${{ inputs.repo }}"
        env:
          JIRA_API_TOKEN: ${{ secrets.JIRA_CLOUD_API_TOKEN }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_CLOUD_USERNAME }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
