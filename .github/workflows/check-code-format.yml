name: "Check Code Format"

on:
  workflow_call:
    inputs:
      language:
        description: 'The programming language for the code format check'
        required: true
        type: string
      dotnet-version:
        description: 'La versi√≥n de .NET para usar en este pipeline'
        required: false
        type: string

jobs:
  check-code-format:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up .NET Core
        if: ${{ inputs.language == 'dotnet' && inputs.dotnet-version }}
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: "${{ inputs.dotnet-version }}"

      - name: Set up Node.js
        if: ${{ inputs.language == 'node' }}
        uses: actions/setup-node@v4

      - name: Run Code Formatter
        run: |
          if [ "${{ inputs.language }}" == "go" ]; then
            echo "Running Go formatter"
            gofmt -l .
          elif [ "${{ inputs.language }}" == "node" ]; then
            echo "Running Prettier for Node.js"
            npx prettier --check .
          elif [ "${{ inputs.language }}" == "python" ]; then
            echo "Running Black for Python"
            black --check .
          elif [ "${{ inputs.language }}" == "java" ]; then
            echo "Running Maven formatter for Java"
            ./mvnw formatter:validate
          elif [ "${{ inputs.language }}" == "dotnet" ]; then
            version=$(echo "${{ inputs.dotnet-version }}" | cut -d'.' -f1)
            if [ "$version" -lt 3 ]; then
              echo "Skipping dotnet format: version is less than 3. Your version: ${{ inputs.dotnet-version }}"
            else
              echo "Running dotnet format"
              dotnet format
            fi
          fi
